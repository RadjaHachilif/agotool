version: '3'
services:

  db: # name
    image: "postgres:10"
    volumes:
      - "dbdata:/var/lib/postgresql/data"
      # - "agotool_data:/agotool_data" # version 1, named-volume
      # - .:/agotool_data # version 2, bind mount, to mount files from the host to the container
     ### Ody
      #- /Users/dblyon/modules/cpr/agotool/data/:/agotool_data # version 2, bind mount, to mount files from the host to the container
     ### Atlas
      - /home/dblyon/agotool/data/:/agotool_data
    #ports: # expose port in order to connect to PostgreSQL from outside docker
    #  - "5432:5432"
    env_file:
      - ./app/env_file
    networks:
      - db_nw

  flaskapp:
    restart: on-failure
    build: . # uncomment to build from Dockerfile, else pull from dockerhub
    # image: dblyon/python_agotool:latest
    volumes:
      - ./app/:/opt/services/flaskapp/src
      # - "agotool_data:/agotool_data" # version 1, named-volume (works for Atlas to run the container but no obo files found, but only in this mode does the flaskapp have write access)
      ### Ody
      #- /Users/dblyon/modules/cpr/agotool/data/:/agotool_data # version 2, bind mounted volume from host, e.g. RW access from container.
      ### Atlas
      - /home/dblyon/agotool/data/:/agotool_data
    env_file:
      - ./app/env_file
    networks:
      - db_nw
      - web_nw
    depends_on:
      - db

  nginx:
    image: "nginx:1.13.8"
    ports:
      #- "8080:80"
      - "5911:80"
    volumes:
      - ./app/conf.d:/etc/nginx/conf.d
    networks:
      - web_nw
    depends_on:
      - flaskapp

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge

volumes: # can be shared
  dbdata: # purely Postgres
  agotool_data: # version 1

# volumes:
# "named volume" persistent data container that is managed by docker.
# e.g.
# - "agotool_data:/agotool_data"
# "bind mounted volume" from host, e.g. RW access from container. local changes are reflected in docker
# e.g.
# - ./app/:/opt/services/flaskapp/src

version: '3'
services:
  flaskapp:
    volumes:
      ####### app data, if DOCKER == True comment out, if DOCKER == False uncomment
      ## $ docker run -it --rm --name dd --mount type=bind,source=`pwd`/app,target=/opt/services/flaskapp/src  f6a48a325d61 bash
      #- ./app/:/opt/services/flaskapp/src

      ####### Data bind mount
      ### Ody
      #- /Users/dblyon/modules/cpr/agotool/data/:/agotool_data # version 2, bind mounted volume from host, e.g. RW access from container.
      ### Atlas
      - /home/dblyon/agotool/data/:/agotool_data
      ### Aquarius
      # - /home/dblyon/agotool/data:/agotool_data
      # - /mnt/mnemo5/dblyon/agotool/data:/agotool_data
      # command: bash -c "find /opt/services/flaskapp/src/static -type f -exec chmod 644 {} \;"
    env_file:
      - ./app/env_file
    networks:
      - db_nw
      - web_nw
#    depends_on:
#      - db

  nginx:
    ports:
      #- "8080:80"
      #- "5911:80"
      - 10110:80
    volumes:
      - ./app/conf.d:/etc/nginx/conf.d
      - ./app/static:/var/www/static
#    command: bash -c "find /var/www/static -type f -exec chmod 644 {} \;"
    networks:
      - web_nw
    depends_on:
      - flaskapp
#      - flaskapp_1
#      - flaskapp_2

networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge

volumes: # can be shared
#  dbdata: # purely Postgres
  agotool_data: # version 1

# volumes:
# "named volume" persistent data container that is managed by docker.
# e.g.
# - "agotool_data:/agotool_data"
# "bind mounted volume" from host, e.g. RW access from container. local changes are reflected in docker
# e.g.
# - ./app/:/opt/services/flaskapp/src



#  flaskapp_1:
#    container_name: flaskapp_1
#    # restart: on-failure
#    build: . # uncomment to build from Dockerfile, else pull from dockerhub
#    # image: dblyon/python_agotool:latest
#    volumes:
#      ####### app data, if DOCKER == True comment out, if DOCKER == False uncomment
#      ## $ docker run -it --rm --name dd --mount type=bind,source=`pwd`/app,target=/opt/services/flaskapp/src  f6a48a325d61 bash
#      #- ./app/:/opt/services/flaskapp/src
#
#      ####### Data bind mount
#      ### Ody
#      - /Users/dblyon/modules/cpr/agotool/data/:/agotool_data # version 2, bind mounted volume from host, e.g. RW access from container.
#      ### Atlas
#      #- /home/dblyon/agotool/data/:/agotool_data
#    env_file:
#      - ./app/env_file
#    networks:
#      - db_nw
#      - web_nw
#    depends_on:
#      - db

#  flaskapp_2:
#    container_name: flaskapp_2
#    # restart: on-failure
#    build: . # uncomment to build from Dockerfile, else pull from dockerhub
#    # image: dblyon/python_agotool:latest
#    volumes:
#      ####### app data, if DOCKER == True comment out, if DOCKER == False uncomment
#      ## $ docker run -it --rm --name dd --mount type=bind,source=`pwd`/app,target=/opt/services/flaskapp/src  f6a48a325d61 bash
#      #- ./app/:/opt/services/flaskapp/src
#
#      ####### Data bind mount
#      ### Ody
#      - /Users/dblyon/modules/cpr/agotool/data/:/agotool_data # version 2, bind mounted volume from host, e.g. RW access from container.
#      ### Atlas
#      #- /home/dblyon/agotool/data/:/agotool_data
#    env_file:
#      - ./app/env_file
#    networks:
#      - db_nw
#      - web_nw
#    depends_on:
#      - dbversion: '3'

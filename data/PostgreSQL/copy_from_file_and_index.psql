DROP TABLE IF EXISTS secondary_2_primary_id_temp, protein_2_functionenum_temp, functions_temp;
--     , taxid_2_functioncountarray_temp, functions_temp, taxid_2_protein_temp, protein_2_functionenum_and_score_temp, lineage_temp;
-- DROP TABLE IF EXISTS secondary_2_primary_id_temp, protein_2_functionenum_temp, taxid_2_functioncountarray_temp, functions_temp, taxid_2_protein_temp, protein_2_functionenum_and_score_temp, lineage_temp;



CREATE TABLE secondary_2_primary_id_temp (
   taxid integer,
   sec text,
   prim text);
-- \copy secondary_2_primary_id_temp FROM '/agotool_data/PostgreSQL/tables/Secondary_2_Primary_ID_UPS_FIN.txt';
\copy secondary_2_primary_id_temp FROM 'tables/Secondary_2_Primary_ID_UPS_FIN.txt';
CREATE INDEX secondary_2_primary_id_taxid_idx_temp ON secondary_2_primary_id_temp (taxid);
CREATE INDEX secondary_2_primary_id_sec_idx_temp ON secondary_2_primary_id_temp (sec);
CREATE INDEX secondary_2_primary_id_prim_idx_temp ON secondary_2_primary_id_temp (prim);
CLUSTER secondary_2_primary_id_temp USING secondary_2_primary_id_taxid_idx_temp;


CREATE TABLE protein_2_functionenum_temp (
    taxid integer,
    id text,
    functionenum integer ARRAY);
-- \copy protein_2_functionenum_temp FROM '/agotool_data/PostgreSQL/tables/Protein_2_FunctionEnum_table_UPS_FIN.txt';
\copy protein_2_functionenum_temp FROM 'tables/Protein_2_FunctionEnum_table_UPS_FIN.txt';
CREATE INDEX protein_2_functionenum_taxid_idx_temp ON protein_2_functionenum_temp (taxid);
CREATE INDEX protein_2_functionenum_id_idx_temp ON protein_2_functionenum_temp (id);
CLUSTER protein_2_functionenum_temp USING protein_2_functionenum_taxid_idx_temp;


CREATE TABLE functions_temp (
    enum integer,
    etype integer,
    an text,
    description text,
    year text,
    level integer);
\copy functions_temp FROM 'tables/Functions_table_UPS_FIN.txt';
CREATE INDEX functions_enum_idx_temp ON functions_temp (enum);
CREATE INDEX functions_an_idx_temp ON functions_temp (an);
CREATE INDEX functions_etype_an_idx_temp ON functions_temp (etype, an);
CLUSTER functions_temp USING functions_etype_an_idx_temp;


-- CREATE TABLE taxid_2_functioncountarray_temp (
--     taxid integer,
--     background_n integer,
--     background_index_positions_arr integer ARRAY,
--     background_count_arr integer ARRAY);
-- \copy taxid_2_functioncountarray_temp FROM '/agotool_data/PostgreSQL/tables/Taxid_2_FunctionCountArray_table_UPS_FIN.txt';
-- CREATE INDEX taxid_2_functioncountarray_taxid_idx_temp ON taxid_2_functioncountarray_temp (taxid);
--
--
-- CREATE TABLE taxid_2_protein_temp (
--     taxid integer,
--     count integer,
--     an_array text ARRAY);
-- \copy taxid_2_protein_temp FROM '/agotool_data/PostgreSQL/tables/Taxid_2_Proteins_table_UPS_FIN.txt';
-- CREATE INDEX taxid_2_protein_taxid_idx_temp ON taxid_2_protein_temp (taxid);
--
--
-- CREATE TABLE protein_2_functionenum_and_score_temp (
--     taxid integer,
--     uniprotid text,
--     funcenum_arr integer ARRAY,
--     score_arr integer ARRAY);
-- \copy protein_2_functionenum_and_score_temp FROM '/agotool_data/PostgreSQL/tables/Protein_2_FunctionEnum_and_Score_table_UPS_FIN.txt';
-- CREATE INDEX protein_2_functionenum_and_score_taxid_idx_temp ON protein_2_functionenum_and_score_temp (taxid);
-- CREATE INDEX protein_2_functionenum_and_score_uniprotid_idx_temp ON protein_2_functionenum_and_score_temp (uniprotid);
-- CLUSTER protein_2_functionenum_and_score_temp USING protein_2_functionenum_and_score_taxid_idx_temp;
--
--
-- CREATE TABLE lineage_temp (
--     func_enum integer,
--     func_enum_array integer ARRAY);
-- \copy lineage_temp FROM '/agotool_data/PostgreSQL/tables/Lineage_table_UPS_FIN.txt';
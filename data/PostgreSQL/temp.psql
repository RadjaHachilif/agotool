DROP TABLE IF EXISTS functions, protein_2_function, entity_types, taxid_2_protein, go_2_slim, taxid_2_functioncountarray, funcenum_2_lineage, protein_2_functionenum, ontologies, function_2_ensp;
DROP INDEX IF EXISTS functions_enum_idx, functions_an_idx, functions_etype_an_idx, protein_2_functionenum_an_idx, protein_2_functionenum_an_idx, taxid_2_protein_taxid_idx, protein_2_function_an_etype_idx, function_2_ensp_taxid_idx, function_2_ensp_taxid_etype_idx, taxid_2_functioncountarray_taxid_idx;

CREATE TABLE functions (
    enum integer,
    etype integer,
    an text,
    description text,
    year text,
    level integer);
CREATE TABLE protein_2_functionenum (
    an text,
    functionenum integer ARRAY);
CREATE TABLE entity_types (
    an text,
    etype integer,
    name text);
CREATE TABLE taxid_2_protein (
    taxid integer,
    an_array text ARRAY,
    count integer);
CREATE TABLE go_2_slim (
    an text,
    slim boolean);
CREATE TABLE taxid_2_functioncountarray (
    taxid integer,
    background_n integer,
    background_count_array integer ARRAY);
CREATE TABLE funcenum_2_lineage (
    enum integer,
    enum_array integer ARRAY);

\copy functions FROM '/agotool_data/PostgreSQL/tables/Functions_table_STRING_hierarchy_fixed.txt';
\copy protein_2_functionenum FROM '/agotool_data/PostgreSQL/tables/Protein_2_FunctionEnum_table_STRING.txt';
\copy entity_types FROM '/agotool_data/PostgreSQL/tables/Entity_types_table_STRING.txt';
\copy taxid_2_protein FROM '/agotool_data/PostgreSQL/tables/TaxID_2_Proteins_table_STRING.txt';
\copy go_2_slim FROM '/agotool_data/PostgreSQL/tables/GO_2_Slim_table_STRING.txt';
\copy taxid_2_functioncountarray FROM '/agotool_data/PostgreSQL/tables/Taxid_2_FunctionCountArray_table_STRING.txt';
\copy funcenum_2_lineage FROM '/agotool_data/PostgreSQL/tables/Lineage_table_STRING_parentsonly.txt';

CREATE INDEX functions_enum_idx ON functions (enum);
CREATE INDEX functions_an_idx ON functions (an);
CREATE INDEX functions_etype_an_idx ON functions (etype, an);
CLUSTER functions USING functions_etype_an_idx;
CREATE INDEX protein_2_functionenum_an_idx ON protein_2_functionenum (an);
CREATE INDEX taxid_2_functioncountarray_taxid_idx ON taxid_2_functioncountarray (taxid);
CREATE INDEX taxid_2_protein_taxid_idx ON taxid_2_protein (taxid);
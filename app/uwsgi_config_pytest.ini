[uwsgi]
master = true ; false makes sense for debugging with e.g. Valgrind
strict = true ; Fail if unknown config parameter found
enable-threads = false ; Python threads not allowed (don't need them)
vacuum = true ; delete sockets during shutdown. Cleanup after yourself
single-interpreter = true ; single python interpreter per worker instance
die-on-term = true ; Shutdown when receiving SIGTERM
need-app = true ; Fail to start if application cannot load
lazy-apps = true ; loads your application one time per worker. thereby forking is disabled.

; aGOtool settings
wsgi-file = runserver.py
callable = app

; https://uwsgi-docs.readthedocs.io/en/latest/MasterFIFO.html
master-fifo = pytest_master.fifo
; echo c > master.fifo ; chain-reload

http = 0.0.0.0:12399
stats = 127.0.0.1:9199 ; monitor
auto-procname = true ; give processes names (master and worker)
; prepend a useful name to the processes (can be seen in htop, but top doesn't show it)
procname-prefix = PyTest_flask_
; Logging
disable-logging = true ; uWSGI logging is too verbose
;log-4xx = true ; but we want to see critical errors
;log-5xx = true ; but we want to see critical errors
;req-logger = file:log_uwsgi_requests_pytest.txt
;logger = file:log_uwsgi_pytest.txt
;safe-pidfile = pytest_master_PID.txt ; not used

; Buffer size
buffer-size=32768
harakiri = 3 ; Number of seconds after which "stuck worker" will get destroyed
[uwsgi]
master = true ; false makes sense for debugging with e.g. Valgrind
strict = true ; Fail if unknown config parameter found
enable-threads = false ; Python threads not allowed (don't need them)
vacuum = true ; delete sockets during shutdown. Cleanup after yourself
single-interpreter = true ; single python interpreter per worker instance
die-on-term = true ; Shutdown when receiving SIGTERM
need-app = true ; Fail to start if application cannot load
lazy-apps = true ; loads your application one time per worker. thereby forking is disabled.

; aGOtool settings
wsgi-file = runserver.py
callable = app
;http = 0.0.0.0:5911; incoming connections (Aquarius needs 5911)
;socket = :5911 ; incoming connections
socket = /Users/dblyon/modules/cpr/agotool/app/app.sock
stats = 127.0.0.1:9191 ; monitor
; Aquarius /etc/nginx/sites-enabled/agotool.org.conf
auto-procname = true ; give processes names (master and worker)
; prepend a useful name to the processes (can be seen in htop, but top doesn't show it)
procname-prefix = agotool_flask_

master-fifo = local_agotool_master.fifo
safe-pidfile = uwsgi_aGOtool_master_PID.txt
buffer-size = 32768
max-requests = 80000 ; Restart workers after this many requests (STRING_v11: 80000)
max-worker-lifetime = 604800 ; Restart workers after this many seconds (604800 --> 24*7*60*60, once per week).
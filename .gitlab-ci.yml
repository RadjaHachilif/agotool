stages:
  - build_monthly
  - test
  - deploy

variables:
  PYTHON: "/home/gitlab-runner/anaconda3/envs/snake/bin/python"
  SNAKEMAKE: "/home/gitlab-runner/anaconda3/envs/snake/bin/snakemake"

before_script:
    - export DATE=$(date +"%Y_%m_%d_%I_%M_%p")
    - export TAR_FILE_NAME="bak_aGOtool_flatfiles_$DATE.tar"

test:
  stage: test
  tags:
    - aquarius
  script:
    - echo "$(date)"
    - echo $DATE
    - $PYTHON -V
    - $SNAKEMAKE --version
    - echo "$USER"
    - echo $HOSTNAME    
    - echo $TAR_FILE_NAME
    # - echo "bak_aGOtool_flatfiles_$DATE.tar"
    # - cd /home/dblyon/agotool/data/PostgreSQL/tables
    # - echo pwd
    ### tar and compress previous files for backup
    # - cd /home/dblyon/agotool/data/PostgreSQL/tables
    # - echo $(pwd)
    #- sudo find . -maxdepth 1 -name '*.npy' -o -name '*_UPS_FIN*' | xargs tar cvf $TAR_FILE_NAME
    ### compress for quick transfer and backup, this can run in the background since it's independent of snakemake
    # - pbzip2 -p8 $TAR_FILE_NAME &
    
    ### update
    # - cd /home/dblyon/agotool
    # - git pull

    ## PyTest
    - cd /home/dblyon/agotool/app/python/testing/sanity
    - /home/dblyon/anaconda3/envs/agotool/bin/pytest
    
    # ### compile Cython
    # - cd /home/dblyon/agotool/app/python
    # - $PYTHON setup.py build_ext --inplace -f

    # ### restart uWSGI
    # - cd /home/dblyon/agotool/app
    # - /home/dblyon/anaconda3/envs/agotool/bin/uwsgi --reload uwsgi_aGOtool_master_PID.txt


job:on-schedule:
  only:
    - schedules
  stage: deploy
  tags:
    - aquarius
  script:
    - echo "$(date)"
    - $PYTHON -V
    - $SNAKEMAKE --version
    - echo "$USER"
    - echo $HOSTNAME
    - echo $DATE
    ## PyTest
    - cd /home/dblyon/agotool/app/python/testing/sanity
    - /home/dblyon/anaconda3/envs/agotool/bin/pytest

#     # ### tar and compress previous files for backup
#     # - cd /home/dblyon/agotool/data/PostgreSQL/tables
#     # - echo pwd
#     # - find . -maxdepth 1 -name '*.npy' -o -name '*_UPS_FIN*' | xargs tar cvf $TAR_FILE_NAME
#     # ### compress for quick transfer and backup, this can run in the background since it's independent of snakemake
#     # - pbzip2 -p8 $TAR_FILE_NAME &
#     ### compile Cython
#     - cd /home/dblyon/agotool/app/python
#     - $PYTHON setup.py build_ext --inplace -f

#     ### restart uWSGI
#     - cd /home/dblyon/agotool/app
#     - /home/dblyon/anaconda3/envs/agotool/bin/uwsgi --reload uwsgi_aGOtool_master_PID.txt


# ### run snakemake pipeline
# echo "\n### run snakemake pipeline\n"
# cd /mnt/mnemo5/dblyon/agotool/app/python
# /mnt/mnemo5/dblyon/install/anaconda3/envs/snake/bin/snakemake -l | tr '\n' ' ' | xargs /mnt/mnemo5/dblyon/install/anaconda3/envs/snake/bin/snakemake -j 10 -F
# check_exit_status
  
